kind: Pod
apiVersion: v1
metadata:
  name: seccam-backend-7fbfcdb557-w86jc
  generateName: seccam-backend-7fbfcdb557-
  namespace: seccamproject
  labels:
    app: seccam-backend
    pod-template-hash: 7fbfcdb557
  annotations:
    kubernetes.io/psp: eks.privileged
    kubesphere.io/restartedAt: '2022-04-28T03:30:56.426Z'
spec:
  volumes:
    - name: kube-api-access-tdxjs
      projected:
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              name: kube-root-ca.crt
              items:
                - key: ca.crt
                  path: ca.crt
          - downwardAPI:
              items:
                - path: namespace
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
        defaultMode: 420
  containers:
    - name: seccam-backend
      image: 'rjonmarco/seccambackend:1.0.0'
      ports:
        - name: http-web
          containerPort: 9001
          protocol: TCP
      resources: {}
      volumeMounts:
        - name: kube-api-access-tdxjs
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      imagePullPolicy: IfNotPresent
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  dnsPolicy: ClusterFirst
  nodeName: ip-172-31-10-30.ap-east-1.compute.internal
  securityContext: {}
  schedulerName: default-scheduler
  tolerations:
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
  priority: 0
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority
